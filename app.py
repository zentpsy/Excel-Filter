import streamlit as st
import pandas as pd
import os
import re

st.set_page_config(page_title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", layout="wide")
st.title("üìä ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å Excel ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå")

excel_file_path = "data/all_budget.xlsx"

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
if os.path.exists(excel_file_path):
    try:
        df = pd.read_excel(excel_file_path)
        expected_columns = [
            "‡∏•‡∏≥‡∏î‡∏±‡∏ö", "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì",
            "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô", "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà", "‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà", "‡∏ï‡∏≥‡∏ö‡∏•", "‡∏≠‡∏≥‡πÄ‡∏†‡∏≠", "‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
        ]
        if all(col in df.columns for col in expected_columns):
            for col in ["‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà", "‡∏•‡∏≥‡∏î‡∏±‡∏ö"]:
                df[col] = df[col].fillna('').astype(str)

            col1, col2 = st.columns(2)
            with col1:
                selected_project = st.selectbox("üßæ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"] + sorted(df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"].dropna().unique()))
                selected_budget = st.selectbox("üí∞ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"] + sorted(df["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"].dropna().unique()))
            with col2:
                selected_year = st.selectbox("üìÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"] + sorted(df["‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"].dropna().unique()))
                
                # ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ unique ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô
                all_departments = df["‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô"].dropna().unique().tolist()

                # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô "‡∏™‡∏ó‡∏ö. ‡πÄ‡∏Ç‡∏ï 1" -> 1
                def extract_number(text):
                    match = re.search(r'\d+', str(text))
                    if match:
                        return int(match.group())
                    return 9999  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏´‡∏•‡∏±‡∏á‡∏™‡∏∏‡∏î
                
                # ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ
                all_departments_sorted = sorted(all_departments, key=extract_number)
                
                # ‡πÄ‡∏û‡∏¥‡πà‡∏° "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡πÑ‡∏ß‡πâ‡∏ö‡∏ô‡∏™‡∏∏‡∏î
                all_departments_sorted = ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"] + all_departments_sorted
                
                selected_departments = st.multiselect(
                    "üìç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô (‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤)",
                    all_departments_sorted,
                    default=["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]
                )

            filtered_df = df.copy()
            if selected_project != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
                filtered_df = filtered_df[filtered_df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] == selected_project]
            if selected_budget != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
                filtered_df = filtered_df[filtered_df["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"] == selected_budget]
            if selected_year != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
                filtered_df = filtered_df[filtered_df["‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"] == selected_year]
            if selected_departments and "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" not in selected_departments:
                filtered_df = filtered_df[filtered_df["‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô"].isin(selected_departments)]

            st.info(f"üìà ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(filtered_df)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
            st.dataframe(filtered_df, use_container_width=True, height=600)

            @st.cache_data
            def to_excel(df):
                return df.to_excel(index=False, engine="openpyxl")

            if not filtered_df.empty:
                st.download_button(
                    label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô Excel",
                    data=to_excel(filtered_df),
                    file_name="filtered_data.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                )

        else:
            st.error("‚ùå ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: " + ", ".join(expected_columns))
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
else:
    st.error(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå `{excel_file_path}` ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå `data/`")
