import streamlit as st
import pandas as pd
import os
from io import BytesIO
import re

st.set_page_config(page_title="Excel Filter App", layout="wide")

st.title("üìä Website ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•-‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ô")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
file_path = os.path.join("data", "all_budget.xlsx")
if not os.path.exists(file_path):
    st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå data/all_budget.xlsx ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå data/")
    st.stop()

df = pd.read_excel(file_path)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
required_columns = ["‡∏•‡∏≥‡∏î‡∏±‡∏ö", "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô",
                    "‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà", "‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà", "‡∏ï‡∏≥‡∏ö‡∏•", "‡∏≠‡∏≥‡πÄ‡∏†‡∏≠", "‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"]
if not all(col in df.columns for col in required_columns):
    st.error("‡πÑ‡∏ü‡∏•‡πå Excel ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    st.stop()

def extract_number(s):
    match = re.search(r"\d+", str(s))
    return int(match.group()) if match else float('inf')

# ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Dropdown ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏±‡∏ô
selected_budget = "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
selected_year = "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
selected_project = "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
selected_departments = ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Filter ---
st.markdown("### üîç ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
col1, col2 = st.columns(2)
col3, col4 = st.columns(2)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dropdown
def get_options(dataframe, column_name):
    options = dataframe[column_name].dropna().unique().tolist()
    if column_name == "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì":
        options = sorted([str(y) for y in options])
    elif column_name == "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô":
        options = sorted(options, key=extract_number)
    else:
        options.sort()
    return ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"] + options

# ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
filtered_df_for_options = df.copy()

# Dropdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì'
with col1:
    budget_options = get_options(filtered_df_for_options, "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì")
    selected_budget = st.selectbox("üí∞ ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", budget_options, key="budget_select")
    if selected_budget != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
        filtered_df_for_options = filtered_df_for_options[filtered_df_for_options["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"] == selected_budget]

# Dropdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö '‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì'
with col2:
    year_options = get_options(filtered_df_for_options, "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì")
    selected_year = st.selectbox("üìÖ ‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì", year_options, key="year_select")
    if selected_year != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
        filtered_df_for_options = filtered_df_for_options[filtered_df_for_options["‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"].astype(str) == selected_year]

# Dropdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö '‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£'
with col3:
    project_options = get_options(filtered_df_for_options, "‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£")
    selected_project = st.selectbox("üìå ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£", project_options, key="project_select")
    if selected_project != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
        filtered_df_for_options = filtered_df_for_options[filtered_df_for_options["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] == selected_project]

# Dropdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö '‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô' (Multiselect)
with col4:
    department_options = get_options(filtered_df_for_options, "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô")
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ default ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á
    current_selected_departments = st.session_state.get("dept_select", ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"])
    valid_defaults = [d for d in current_selected_departments if d in department_options]
    if not valid_defaults: # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ default ‡πÄ‡∏õ‡πá‡∏ô "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
        valid_defaults = ["‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]
    
    selected_departments = st.multiselect("üè¢ ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô", department_options, default=valid_defaults, key="dept_select")
    if "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" not in selected_departments:
        filtered_df_for_options = filtered_df_for_options[filtered_df_for_options["‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô"].isin(selected_departments)]


# --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ---
filtered_df = df.copy()

if selected_budget != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
    filtered_df = filtered_df[filtered_df["‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"] == selected_budget]

if selected_year != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
    filtered_df = filtered_df[filtered_df["‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"].astype(str) == selected_year]

if selected_project != "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î":
    filtered_df = filtered_df[filtered_df["‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£"] == selected_project]

if "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" not in selected_departments:
    filtered_df = filtered_df[filtered_df["‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô"].isin(selected_departments)]


# ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
if not filtered_df.empty:
    st.info(f"üìà ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {len(filtered_df)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
else:
    st.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
st.markdown("### üìÑ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
st.dataframe(filtered_df, use_container_width=True)

# Export ‡πÄ‡∏õ‡πá‡∏ô Excel
def to_excel_bytes(df_to_export): # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ parameter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö df ‡∏´‡∏•‡∏±‡∏Å
    output = BytesIO()
    with pd.ExcelWriter(output, engine="openpyxl") as writer:
        df_to_export.to_excel(writer, index=False)
    return output.getvalue()

if not filtered_df.empty:
    st.download_button(
        label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô Excel",
        data=to_excel_bytes(filtered_df),
        file_name="filtered_data.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
